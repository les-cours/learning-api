// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"github.com/99designs/gqlgen/graphql"
)

type Chapter struct {
	ChapterID         string    `json:"chapterID"`
	Title             string    `json:"title"`
	ArabicTitle       string    `json:"arabicTitle"`
	Description       string    `json:"description"`
	ArabicDescription string    `json:"arabicDescription"`
	Lessons           []*Lesson `json:"lessons"`
}

type ClassRoom struct {
	ClassRoomID       string     `json:"classRoomID"`
	Title             string     `json:"title"`
	Image             string     `json:"image"`
	Price             int        `json:"price"`
	Badge             string     `json:"badge"`
	StudentCount      int        `json:"studentCount"`
	Rating            float64    `json:"rating"`
	ArabicTitle       string     `json:"arabicTitle"`
	Description       string     `json:"description"`
	ArabicDescription string     `json:"arabicDescription"`
	Teacher           *Teacher   `json:"teacher"`
	Chapters          []*Chapter `json:"chapters"`
	Statistics        *Statistic `json:"statistics,omitempty"`
}

type Comment struct {
	ID         string `json:"id"`
	User       *User  `json:"user"`
	RepliedTo  string `json:"repliedTo"`
	Content    string `json:"content"`
	DocumentID string `json:"documentID"`
	Timestamp  int    `json:"timestamp"`
	Edited     bool   `json:"edited"`
	IsTeacher  bool   `json:"isTeacher"`
}

type CreateChapterInput struct {
	ClassRoomID string `json:"classRoomID"`
	Title       string `json:"title"`
	ArabicTitle string `json:"arabicTitle"`
	Description string `json:"description"`
}

type CreateCommentInput struct {
	Content    string `json:"content"`
	DocumentID string `json:"documentID"`
	IsTeacher  bool   `json:"isTeacher"`
}

type CreateLessonInput struct {
	ChapterID   string `json:"chapterID"`
	Title       string `json:"title"`
	Order       int    `json:"order"`
	ArabicTitle string `json:"arabicTitle"`
	Description string `json:"description"`
}

type CreatePDFInput struct {
	LessonID          string `json:"lessonID"`
	Title             string `json:"title"`
	ArabicTitle       string `json:"arabicTitle"`
	Description       string `json:"description"`
	ArabicDescription string `json:"arabicDescription"`
	LectureNumber     int    `json:"lectureNumber"`
	URL               string `json:"url"`
}

type CreateReplyInput struct {
	Content    string `json:"content"`
	DocumentID string `json:"documentID"`
	RepliedTo  string `json:"repliedTo"`
	IsTeacher  bool   `json:"isTeacher"`
}

type CurrentSubscription struct {
	Status       bool          `json:"status"`
	RestDays     int           `json:"rest_days"`
	Subscription *Subscription `json:"subscription,omitempty"`
}

type Document struct {
	DocumentID        string    `json:"documentID"`
	DocumentType      string    `json:"documentType"`
	Title             string    `json:"title"`
	ArabicTitle       string    `json:"arabicTitle"`
	Description       string    `json:"description"`
	ArabicDescription string    `json:"arabicDescription"`
	Duration          *Duration `json:"duration"`
	LectureNumber     int       `json:"lectureNumber"`
	DocumentLink      string    `json:"documentLink"`
}

type DocumentLink struct {
	DocumentLink string `json:"documentLink"`
}

type Duration struct {
	Hours       int `json:"hours"`
	Minutes     int `json:"minutes"`
	Seconds     int `json:"seconds"`
	Nanoseconds int `json:"nanoseconds"`
}

type IDRequest struct {
	ID string `json:"id"`
}

type Lesson struct {
	LessonID          string      `json:"lessonID"`
	Title             string      `json:"title"`
	ArabicTitle       string      `json:"arabicTitle"`
	Description       string      `json:"description"`
	ArabicDescription string      `json:"arabicDescription"`
	Order             int         `json:"order"`
	Documents         []*Document `json:"documents"`
}

type Message struct {
	ID        string    `json:"id"`
	RoomID    string    `json:"roomID"`
	Message   string    `json:"message"`
	Timestamp string    `json:"timestamp"`
	IsTeacher bool      `json:"isTeacher"`
	Owner     *UserRoom `json:"owner"`
}

type MessageInput struct {
	RoomID    string `json:"roomID"`
	Message   string `json:"message"`
	IsTeacher bool   `json:"isTeacher"`
	OwnerID   string `json:"ownerID"`
}

type Mutation struct {
}

type OperationStatus struct {
	Succeeded bool `json:"succeeded"`
}

type Query struct {
}

type Room struct {
	ID       string      `json:"id"`
	Name     string      `json:"name"`
	Teacher  *UserRoom   `json:"teacher"`
	Users    []*UserRoom `json:"users"`
	Messages []*Message  `json:"messages"`
}

type Statistic struct {
	Students int `json:"students"`
	Videos   int `json:"videos"`
	Pdfs     int `json:"pdfs"`
	Chapters int `json:"chapters"`
	Lessons  int `json:"lessons"`
}

type Subscription struct {
	ID      string `json:"id"`
	MonthID int    `json:"month_id"`
	PaidAt  int    `json:"paid_at"`
}

type Teacher struct {
	TeacherID string `json:"teacherID"`
	Firstname string `json:"firstname"`
	Lastname  string `json:"lastname"`
}

type UpdateChapterInput struct {
	ChapterID   string `json:"chapterID"`
	Title       string `json:"title"`
	ArabicTitle string `json:"arabicTitle"`
	Description string `json:"description"`
}

type UpdateClassRoomInput struct {
	ClassRoomID       string `json:"classRoomID"`
	Title             string `json:"title"`
	Image             string `json:"image"`
	Price             int    `json:"price"`
	ArabicTitle       string `json:"arabicTitle"`
	Description       string `json:"description"`
	ArabicDescription string `json:"arabicDescription"`
}

type UpdateLessonInput struct {
	LessonID    string `json:"lessonID"`
	ChapterID   string `json:"chapterID"`
	Title       string `json:"title"`
	ArabicTitle string `json:"arabicTitle"`
	Description string `json:"description"`
}

type UploadVideoInput struct {
	LessonID string         `json:"lessonID"`
	Content  graphql.Upload `json:"content"`
}

type User struct {
	ID        string `json:"id"`
	Username  string `json:"username"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Avatar    string `json:"avatar"`
}

type UserRoom struct {
	ID        string `json:"id"`
	Username  string `json:"username"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Avatar    string `json:"avatar"`
	Paid      bool   `json:"paid"`
}
